#
# Configuración de los contenedores
#

# Plantilla base de fichero .env para configurar los contenedores
# que se lanzarán. Haz una copia, renombralo a .env y ajusta
# las variables que consideres oportunas.

######################################
#
#     Variables de configuración
#
######################################


# Usuario del sistema con el que se lanzan los contenedores
# que puedan ser lanzados sin ser root.
#
# De serie se lanzará con este usuario el contenedor del
# backend. El contenedor de la base de datos se lanzará con
# este usuario si se incorpora db.directory.yml en el lanzamiento
# para usar un directorio del anfitrión en lugar de un
# volumen. El contenedor del frontend (con apache) no se lanzará
# nunca con este usuario por simplicidad (se conecta en el puerto
# 80 que necesita privilegios de administración)
#
# ¡CUIDADO! Hay que poner ids numéricos. Si se pone el nombre
# se buscará ese nombre *en cada contenedor*. Si una imagen no
# define ese nombre, no se lanzará.
#
# No es necesario que las imágenes tengan el usuario definido.
# El único efecto es que si se entra en una de esas imágenes
# (ejecutando un shell, por ejemplo) se verá una indicación
# de que el usuario no tiene nombre en el prompt.
#
# Si no se especifica, se asume 1000:1000 (que es típicamente
# el primer usuario en Debian/Ubuntu)
#UID=1000
#GUID=1000


#######
#
# Configuración de la base de datos
#

# Configuración de la *inicialización* de la base de datos.
# Solo es necesario la primera vez que se lanzan los contenedores.
MYSQL_ROOT_PASSWORD=root

# Usuario, contraseña y base de datos usada por el backend.
# En el primer arranque del contenedor de MySQL se crea el usuario y
# la base de datos vacía.
BACKEND_DB_NAME=programame
BACKEND_DB_USER=programame
BACKEND_DB_PASSWORD=programame


# Salvo que se diga lo contrario, la base de datos se guarda directamente
# en el contenedor de la base de datos, lo que no es muy útil como
# sistema de persistencia.
# 
# Si se incorpora al .yml de docker compose el fichero db.directory.yml:
#
# - El contenedor de MySQL se lanza con el usuario UID/GUID (ver arriba)
# - Se monta un directorio del anfitrión como almacén de la base de datos.
#
# El directorio donde se monta se especifica en la siguiente variable
# de entorno. Es necesario especificar la ruta absoluta, y debe ser
# de lectura/escritura para UID/GUID. Dentro *debe crearse* un subdirectorio
# ./data para los datos y un ./logs para los logs. No debe terminar en /
#
# HOST_DB_PATH=/ruta/en/anfitrion/dbdata


#######
#
# Configuración del primer usuario administrador
#

# Usuario y contraseña del primer usuario administrador que se crea
# al lanzar la aplicación por primera vez. Se ignora si no es la primera
# vez que se lanza y ya hay algún usuario administrador.
BACKEND_FIRSTADMIN_USER=test
BACKEND_FIRSTADMIN_PASSWORD=12341234

#######
#
# Configuración de la red
#

# Puerto interno (del contenedor) en el que escuchará el servidor
# web del backend. Por defecto es el 8080. Es improbable que lo
# quieras cambiar.
#BACKEND_INTERNAL_PORT=8080

# Por defecto, los tres contenedores se conectan a una red propia del
# grupo. Si se quiere publicar la web a través de un proxy inverso, será
# necesario conectar el frontend y el backend con la red Docker donde
# esté el proxy inverso para que pueda llegar a ellos. También cobrarán
# importancia los nombres de ambos contenedores para que el proxy
# inverso los encuentre.
#
# Si quieres un lanzamiento así, incorpora externalnetwork.yml y
# define las siguientes variables.
# Red donde está el proxy. Debe ser "externa" (definida en Docker).
EXTERNAL_NETWORK=proxyNet
# Nombres de los contenedores
FRONTEND_CONTAINER_NAME=programame-ucr22-front
BACKEND_CONTAINER_NAME=programame-ucr22-api


#######
#
# Ficheros a mezclar. ¡El orden podría ser importante!
#

# Según lo que quieras, incluirás varios. Se dejan varias opciones.
# ¡Deja solo una descomentada!

# Versión básica. MySQL almacenado en un contenedor y ejecutado
# como root. Todo en la misma red.
COMPOSE_FILE=base.yml

# MySQL lanzado con el usuario sin privilegios y datos en un directorio
# del anfitrión.
#COMPOSE_FILE=base.yml:db.directory.yml

# Versión completa. MySQL lanzado con el usuario sin privilegios y
# en un directorio del anfitrión, y red externa para conexión con
# proxy inverso.
#COMPOSE_FILE=base.yml:db.directory.yml:externalnetwork.yml
